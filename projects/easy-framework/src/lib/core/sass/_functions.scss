/* stylelint-disable scss/no-duplicate-dollar-variables */
/* stylelint-disable unit-disallowed-list */
@use "sass:list";
@use "sass:math";

// Credit: https://css-tricks.com/snippets/sass/material-shadows-mixin/
@function bottom-shadow($depth, $color) {
	$blur: rem(list.nth(1 3 3 5 6, $depth) * 4);
	$color: rgba(color($color), list.nth(.24 .23 .23 .22 .22, $depth));
	$offset: rem(list.nth(1.5 3 6 10 15, $depth));

	@return 0 $offset $blur $color;
}

@function color($color) {
	@return map-get($colors, $color);
}

// Credit: https://github.com/pierreburel/sass-rem
@function rem($values...) {
	$rems: ();
	$separator: list.separator($values);

	@each $value in $values {
		@if type-of($value) == list {
			$value: rem($value...);
		} @else if $value != 0 {
			$value: math.div($value, 16) * 1rem;
		} @else {
			$value: $value;
		}

		$rems: list.append($rems, $value, $separator);
	}

	@return $rems;
}

@function space($size) {
	@return map-get($space, $size);
}

// Credit: https://css-tricks.com/snippets/sass/material-shadows-mixin/
@function top-shadow($depth, $color) {
	$blur: rem(list.nth(1.5 3 10 14 19, $depth) * 4);
	$color: rgba(color($color), list.nth(.12 .16 .19 .25 .3, $depth));
	$offset: rem(list.nth(1.5 3 10 14 19, $depth));

	@return 0 $offset $blur $color;
}
